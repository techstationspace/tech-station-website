@use "sass:map";

@mixin fontStyle($style) {
  font-family: map-get($style, "family");
  font-size: map-get($style, "size");
  font-weight: map-get($style, "weight");
  line-height: map-get($style, "line");
  letter-spacing: map-get($style, "spacing");
  margin-bottom: map-get($style, "margin");
  @if (map-get($style, "mobile-size")) {
    @include mobileOnly {
      font-size: map-get($style, "mobile-size");
    }
  }
}
// title
h1 {
  @include fontStyle($h1-style);
}
h2 {
  @include fontStyle($h2-style);
}
h3 {
  @include fontStyle($h3-style);
}
// subtitle
h4 {
  @include fontStyle($h4-style);
}
h5 {
  @include fontStyle($h5-style);
}
h6 {
  @include fontStyle($h6-style);
}
// lists

// others tags
p {
  @include fontStyle($paragraph-style);
  &:last-child {
    margin-bottom: 0;
  }
}
small {
  @include fontStyle($small-style);
}
blockquote > p {
  @include fontStyle($quote-style);
}

.text {
  z-index: $text-index;
  @include mobileOnly {
    text-align: left !important;
  }

  > *:last-child {
    margin-bottom: 0 !important;
  }

  $alignments: left, right, center;
  @each $align in $alignments {
    &.__align_#{$align} {
      text-align: $align;
    }
  }

  $styles: (
    primary: $theme-primary,
    secondary: $theme-secondary,
    dark: $theme-dark,
    light: $theme-light,
  );

  @each $name, $theme in $styles {
    &.__#{$name} {
      h1,
      h2,
      h3 {
        color: map-get($theme, "title-color");
      }
      h4,
      h5,
      h6 {
        color: map-get($theme, "subtititle-color");
      }
      a {
        color: map-get($theme, "link-color");
      }
      p {
        color: map-get($theme, "paragraph-color");
      }
      b {
        color: map-get($theme, "paragraph-color");
      }
    }
  }
}
